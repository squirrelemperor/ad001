---------------------------------------------------------------
1、准备jar包

    Spring核心包
    spring-core-5.1.3.RELEASE
    spring-beans-5.1.3.RELEASE
    spring-context-5.1.3.RELEASE
    spring-expression-5.1.3.RELEASE

    整合web项目
    spring-web-5.1.3.RELEASE

    整合JUnit
    spring-test-5.1.3.RELEASE

    AOP部分
    spring-aop-5.1.3.RELEASE
    spring-aspects-5.1.3.RELEASE

    spring-jdbc-5.1.3.RELEASE
    spring-tx-5.1.3.RELEASE

    连接池
    c3p0-0.9.5.2
    mchange-commons-java-0.2.11

    整合Mybatis
    mybatis-3.4.6
    mybatis-spring-1.3.2

    数据库驱动
    mysql-connector-java-8.0.13

    ---------------------------------------------------------------
    日志相关
    com.springsource.org.apache.commons.logging-1.1.1
    com.springsource.org.apache.log4j-1.2.15

    aop相关
    com.springsource.org.aopalliance-1.0.0
    com.springsource.org.aspectj.tools-1.6.6.RELEASE

---------------------------------------------------------------
2、编写配置文件

    <context:component-scan base-package="package"/> // 扫描带注释的类
    <context:annotation-config/>  // 注解 + 配置文件

    <context:property-placeholder location="classpath:db.properties"/> // 配置属性文件
        // 获取属性文件中的值的方法   ${key}   // 属性文件内容  key=value

    // 配置数据库连接池  destroy-method="close"  释放资源
    <bean id="dataSource"
        class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">

        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${pass}"/>
    </bean>

    ApplicationContext context = new ClassPathXmlApplicationContext("");
    ((ClassPathXmlApplicationContext) context).close(); // 执行关闭操作，会调用 单例模式的bean的 destory-method=fun


    // 配置数据库工厂
    <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:com/j1824/spring/demo02/*.xml"/>
    </bean>

    SqlSessionFactoryBean

    String resource = "my-config.xml";
    InputStream is = Resource.
    SqlSessionFactory factory = new SqlSessionFacotryBuild(is)

    SqlSessionFactoryBean  等价  SqlSessionFactory


    // 配置SqlSession
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="factory"/>
    </bean>

    SqlSessionTemplate   等价  SqlSession


---------------------------------------------------------------













